@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 240 100% 5%;
    --foreground: 0 0% 98%;

    --card: 240 80% 8%;
    --card-foreground: 0 0% 98%;

    --popover: 240 80% 8%;
    --popover-foreground: 0 0% 98%;

    --primary: 240 100% 60%;
    --primary-foreground: 0 0% 98%;

    --secondary: 120 100% 50%;
    --secondary-foreground: 0 0% 5%;

    --muted: 240 60% 12%;
    --muted-foreground: 0 0% 65%;

    --accent: 60 100% 50%;
    --accent-foreground: 0 0% 5%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 40% 20%;
    --input: 240 60% 12%;
    --ring: 240 100% 60%;

    --radius: 1rem;

    /* Custom design tokens - Blue, Green, Yellow Theme */
    --glass: 240 100% 60% / 0.08;
    --glass-border: 240 100% 60% / 0.2;
    --glow: 240 100% 60% / 0.4;
    --neon: 240 100% 60%;
    --blue: 240 100% 60%;
    --green: 120 100% 50%;
    --yellow: 60 100% 50%;
    --gradient-primary: hsl(240 100% 60%);
    --gradient-secondary: hsl(120 100% 50%);
    --gradient-accent: hsl(60 100% 50%);
    --gradient-white-sparkle: linear-gradient(135deg, 
      hsl(0 0% 98%) 0%, 
      hsl(240 100% 95%) 50%, 
      hsl(0 0% 98%) 100%
    );
    --gradient-text: linear-gradient(135deg, 
      hsl(240 100% 60%) 0%, 
      hsl(120 100% 50%) 50%, 
      hsl(60 100% 50%) 100%
    );
    --gradient-glass: linear-gradient(135deg, hsl(240 100% 60% / 0.1), hsl(120 100% 50% / 0.05));
    --shadow-glow: 0 0 40px hsl(240 100% 60% / 0.4);
    --shadow-accent: 0 0 30px hsl(120 100% 50% / 0.3);
    --shadow-glass: 0 8px 32px hsl(0 0% 0% / 0.6);
    --transition-smooth: all 1.2s cubic-bezier(0.25, 0.1, 0.25, 1);

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-sans;
    background-image: 
      radial-gradient(circle at 20% 20%, hsl(240 100% 60% / 0.08) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, hsl(120 100% 50% / 0.06) 0%, transparent 45%),
      radial-gradient(circle at 50% 80%, hsl(60 100% 50% / 0.05) 0%, transparent 40%);
  }
}

@layer base {
  @property --pos-x {
    syntax: '<percentage>';
    initial-value: 11.14%;
    inherits: false;
  }

  @property --pos-y {
    syntax: '<percentage>';
    initial-value: 140%;
    inherits: false;
  }

  @property --spread-x {
    syntax: '<percentage>';
    initial-value: 150%;
    inherits: false;
  }

  @property --spread-y {
    syntax: '<percentage>';
    initial-value: 180.06%;
    inherits: false;
  }

  @property --color-1 {
    syntax: '<color>';
    initial-value: #000;
    inherits: false;
  }

  @property --color-2 {
    syntax: '<color>';
    initial-value: #08012c;
    inherits: false;
  }

  @property --color-3 {
    syntax: '<color>';
    initial-value: #4e1e40;
    inherits: false;
  }

  @property --color-4 {
    syntax: '<color>';
    initial-value: #70464e;
    inherits: false;
  }

  @property --color-5 {
    syntax: '<color>';
    initial-value: #88394c;
    inherits: false;
  }

  @property --border-angle {
    syntax: '<angle>';
    initial-value: 20deg;
    inherits: true;
  }

  @property --border-color-1 {
    syntax: '<color>';
    initial-value: hsla(340, 75%, 60%, 0.2);
    inherits: true;
  }

  @property --border-color-2 {
    syntax: '<color>';
    initial-value: hsla(340, 75%, 40%, 0.75);
    inherits: true;
  }

  @property --stop-1 {
    syntax: '<percentage>';
    initial-value: 37.35%;
    inherits: false;
  }

  @property --stop-2 {
    syntax: '<percentage>';
    initial-value: 61.36%;
    inherits: false;
  }

  @property --stop-3 {
    syntax: '<percentage>';
    initial-value: 78.42%;
    inherits: false;
  }

  @property --stop-4 {
    syntax: '<percentage>';
    initial-value: 89.52%;
    inherits: false;
  }

  @property --stop-5 {
    syntax: '<percentage>';
    initial-value: 100%;
    inherits: false;
  }
}

@layer components {
  .gradient-button {
    @apply relative appearance-none cursor-pointer;
    background: radial-gradient(
      var(--spread-x) var(--spread-y) at var(--pos-x) var(--pos-y),
      var(--color-1) var(--stop-1),
      var(--color-2) var(--stop-2),
      var(--color-3) var(--stop-3),
      var(--color-4) var(--stop-4),
      var(--color-5) var(--stop-5)
    );
    transition:
      --pos-x 0.5s,
      --pos-y 0.5s,
      --spread-x 0.5s,
      --spread-y 0.5s,
      --color-1 0.5s,
      --color-2 0.5s,
      --color-3 0.5s,
      --color-4 0.5s,
      --color-5 0.5s,
      --border-angle 0.5s,
      --border-color-1 0.5s,
      --border-color-2 0.5s,
      --stop-1 0.5s,
      --stop-2 0.5s,
      --stop-3 0.5s,
      --stop-4 0.5s,
      --stop-5 0.5s;
  }

  .gradient-button::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 1px;
    background: linear-gradient(
      var(--border-angle),
      var(--border-color-1),
      var(--border-color-2)
    );
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: exclude;
    pointer-events: none;
  }

  .gradient-button:hover {
    --pos-x: 0%;
    --pos-y: 91.51%;
    --spread-x: 120.24%;
    --spread-y: 103.18%;
    --color-1: #c96287;
    --color-2: #c66c64;
    --color-3: #cc7d23;
    --color-4: #37140a;
    --color-5: #000;
    --border-angle: 190deg;
    --border-color-1: hsla(340, 78%, 90%, 0.1);
    --border-color-2: hsla(340, 75%, 90%, 0.6);
    --stop-1: 0%;
    --stop-2: 8.8%;
    --stop-3: 21.44%;
    --stop-4: 71.34%;
    --stop-5: 85.76%;
  }

  .gradient-button-variant {
    --color-1: #000022;
    --color-2: #1f3f6d;
    --color-3: #469396;
    --color-4: #f1ffa5;
    --border-angle: 200deg;
    --border-color-1: hsla(320, 75%, 90%, 0.6);
    --border-color-2: hsla(320, 50%, 90%, 0.15);
  }

  .gradient-button-variant:hover {
    --pos-x: 0%;
    --pos-y: 95.51%;
    --spread-x: 110.24%;
    --spread-y: 110.2%;
    --color-1: #000020;
    --color-2: #f1ffa5;
    --color-3: #469396;
    --color-4: #1f3f6d;
    --color-5: #000;
    --stop-1: 0%;
    --stop-2: 10%;
    --stop-3: 35.44%;
    --stop-4: 71.34%;
    --stop-5: 90.76%;
    --border-angle: 210deg;
    --border-color-1: hsla(320, 75%, 90%, 0.2);
    --border-color-2: hsla(320, 50%, 90%, 0.75);
  }

  .glass-card {
    @apply backdrop-blur-xl bg-gradient-to-br from-[hsl(var(--glass))] to-[hsl(var(--glass))] 
           border border-[hsl(var(--glass-border))] rounded-[var(--radius)] 
           shadow-[var(--shadow-glass)];
  }
  
  .glass-header {
    @apply backdrop-blur-md bg-[hsl(var(--glass))] border-b border-[hsl(var(--glass-border))];
  }
  
  .neon-glow {
    @apply shadow-[var(--shadow-glow)];
  }
  
  .gradient-text {
    background: var(--gradient-text);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 200% 200%;
    animation: sparkle 4s ease-in-out infinite;
  }
  
  .text-sparkle {
    background: var(--gradient-white-sparkle);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 200% 200%;
    animation: sparkle 6s ease-in-out infinite;
  }
  
  .floating {
    animation: float 8s ease-in-out infinite;
  }
  
  .hover-lift {
    @apply transition-[var(--transition-smooth)] hover:transform hover:-translate-y-2 hover:shadow-[var(--shadow-glow)];
  }
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-20px); }
}

@keyframes sparkle {
  0% { background-position: 0% 50%; }
  25% { background-position: 50% 25%; }
  50% { background-position: 100% 50%; }
  75% { background-position: 50% 75%; }
  100% { background-position: 0% 50%; }
}

@keyframes mesh-flow {
  0% { transform: translateX(0) translateY(0) rotateZ(0deg); }
  33% { transform: translateX(-15px) translateY(-8px) rotateZ(0.5deg); }
  66% { transform: translateX(8px) translateY(-15px) rotateZ(-0.5deg); }
  100% { transform: translateX(0) translateY(0) rotateZ(0deg); }
}

/* Continuous Scroll Animation */
.animate-scroll-smooth {
  animation: scroll-continuous 40s linear infinite;
}

@keyframes scroll-continuous {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}

/* Scroll Reveal Animation */
.animate-fade-in {
  opacity: 0;
  transform: translateY(30px);
  animation: fade-in-up 0.8s ease-out forwards;
}

@keyframes fade-in-up {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Circle Outline Animation for Badges */
.animate-circle-outline {
  position: relative;
  overflow: visible;
}

.animate-circle-outline::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  border: 2px solid transparent;
  border-radius: inherit;
  background: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--accent))) border-box;
  z-index: -1;
  opacity: 0;
  animation: circle-reveal 1.5s ease-out forwards;
  animation-delay: 0.5s;
}

@keyframes circle-reveal {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
  }
  100% {
    opacity: 0.7;
    transform: scale(1);
  }
}

/* Enhanced Button Animations */
.btn-enhanced {
  position: relative;
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.btn-enhanced::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
  transition: left 0.5s;
}

.btn-enhanced:hover::before {
  left: 100%;
}

/* Smooth scroll for entire document */
html {
  scroll-behavior: smooth;
}

/* Scroll behavior and reveal animations */
html {
  scroll-behavior: smooth;
}

/* Scroll reveal animation */
.scroll-reveal {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.scroll-reveal.animate {
  opacity: 1;
  transform: translateY(0);
}

/* Enhanced scroll animations */
@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(50px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.animate-slide-up {
  animation: slideInUp 0.8s ease-out forwards;
}

.animate-slide-left {
  animation: slideInLeft 0.8s ease-out forwards;
}

.animate-slide-right {
  animation: slideInRight 0.8s ease-out forwards;
}